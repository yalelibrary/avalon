name: 'Avalon Media System' # used in page titles
domain:
  host: localhost
  port: 80
  protocol: http
dropbox:
  path: /var/avalon/dropbox
  upload_uri: sftp://localhost
encoding:
  engine_adapter: matterhorn
matterhorn:
  root: 'http://localhost:8080/'
  baseApplication: 'avalon'
  cleanup_log: 'log/cleanup_jobs.log'
mediainfo:
  path: '/usr/bin/mediainfo'
ffmpeg:
  path: '/usr/local/bin/ffmpeg'
email:
  mailer: :smtp
  comments: 'admin@yexample.com'
  notification: 'admin@example.com'
  support: 'admin@example.com'
solr:
  configset: avalon
  configset_source_path: <%= File.join(Rails.root, 'solr', 'config') %>
  collection_options:
    async:
    auto_add_replicas:
    collection:
      config_name: avalon
    create_node_set:
    max_shards_per_node:
    num_shards: 1
    replication_factor:
    router:
      name:
      field:
    rule:
    shards:
    snitch:
streaming:
  server: :wowza
  stream_token_ttl: 20 #minutes
  content_path: '/var/avalon/rtmp_streams'
  rtmp_base: 'rtmp://loclhost/avalon'
  http_base: 'https://loclhost:1935/avalon/_definst_'
  default_quality: 'auto'
redis:
  host: localhost
  port: 6379
groups:
  system_groups: [administrator, group_manager, manager]
master_file_management:
  strategy: 'none' #'delete', or 'move' (for move uncomment and configure next line)
  #path: '/path/to/move/to'
controlled_vocabulary:
  path: config/controlled_vocabulary.yml
encode_throttling:
  create_jobs_throttle_threshold: 2
  create_jobs_spacing: 5
  update_jobs_throttle_threshold: 3
  update_jobs_spacing: 10
auth:
  configuration:
    - :name: Avalon Test Auth
      :provider: :identity
      :params:
        :fields:
        - :email
          <% if ENV['LTI_AUTH_KEY'] %>
    - :name: Avalon Lti OAuth
      :provider: :lti
      :hidden: true
      :params:
        :oauth_credentials:
          <%= ENV['LTI_AUTH_KEY'] %>: <%= ENV['LTI_AUTH_SECRET'] %>
            <% end %>
